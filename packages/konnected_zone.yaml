binary_sensor:

  - id: zone1
    name: BarnSlideDoorLeft
    pin:
      number: $zone1
      mode: INPUT_PULLUP
    platform: gpio   
    filters:
      - delayed_on_off: $sensor_debounce_time
    on_state:
      - if:
          condition:
            lambda: return id(blink_on_state);
          then:
            - script.execute: blink_status_led
  - id: zone2
    name: BarnSlideDoorRight   
    pin:
      number: $zone2
      mode: INPUT_PULLUP
    platform: gpio   
    filters:
      - delayed_on_off: $sensor_debounce_time
    on_state:
      - if:
          condition:
            lambda: return id(blink_on_state);
          then:
            - script.execute: blink_status_led
  - id: zone3
    name: BarnRollupDoor    
    pin:
      number: $zone3
      mode: INPUT_PULLUP
    platform: gpio   
    filters:
      - delayed_on_off: $sensor_debounce_time
    on_state:
      - if:
          condition:
            lambda: return id(blink_on_state);
          then:
            - script.execute: blink_status_led
  - id: zone4
    name: BarnDoor    
    pin:
      number: $zone4
      mode: INPUT_PULLUP
    platform: gpio   
    filters:
      - delayed_on_off: $sensor_debounce_time
    on_state:
      - if:
          condition:
            lambda: return id(blink_on_state);
          then:
            - script.execute: blink_status_led
#  - id: zone5
#    name: Zone 5
#    pin:
#      number: $zone5
#      mode: INPUT_PULLUP
#    platform: gpio   
#    filters:
#      - delayed_on_off: $sensor_debounce_time
#    on_state:
#      - if:
#          condition:
#            lambda: return id(blink_on_state);
#          then:
#            - script.execute: blink_status_led
#  - id: zone6
#    name: Zone 6   
#    pin:
#      number: $zone6
#      mode: INPUT_PULLUP
#    platform: gpio   
#    filters:
#      - delayed_on_off: $sensor_debounce_time
#    on_state:
#      - if:
#          condition:
#            lambda: return id(blink_on_state);
#          then:
#            - script.execute: blink_status_led            
